schema {
    query: Query
    mutation: Mutation
}

type Book {
    id: ID!
    name: String!
    author: Author
}


type BookResult {
    success: Boolean!
    errors: [String]
    book: Book
}

type BooksResult {
    success: Boolean!
    errors: [String]
    books: [Book]
}

type DeleteBookResult {
    success: Boolean!
    errors: [String]
}

type Author {
    id: ID!
    first_name: String!
    last_name: String!
}

type AuthorResult {
    success: Boolean!
    errors: [String]
    author: Author
}

type AuthorsResult {
    success: Boolean!
    errors: [String]
    authors: [Author]
}

type DeleteAuthorResult {
    success: Boolean!
    errors: [String]
}

type Query {
    books: BooksResult!
    book(bookId: ID!): BookResult!
    authors: AuthorsResult!
    author(authorId: ID!): AuthorResult!
}

type Mutation {
    createBook(name: String, authorId: ID!): BookResult!
    deleteBook(bookId: ID!): DeleteBookResult!
    createAuthor(first_name: String, last_name: String): AuthorResult!
    deleteAuthor(authorId: ID!): DeleteAuthorResult!
}
